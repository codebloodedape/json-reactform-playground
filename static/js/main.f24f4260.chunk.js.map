{"version":3,"sources":["index.js"],"names":["model","App","props","editorTextChange","e","state","jsonChangeTimer","clearTimeout","jsonText","target","value","setTimeout","json","JSON","parse","setState","isJsonValid","errorMessage","jsonToForm","submit","params","console","log","className","onChange","this","defaultValue","stringify","classString","getClassNamesForEditPane","renderEditor","onSubmit","Component","ReactDOM","render","document","getElementById"],"mappings":"2RAKMA,G,OAAQ,CACZ,YAAa,CACX,KAAQ,OACR,OAAU,eACV,UAAY,GAEd,IAAO,CACL,KAAQ,SACR,UAAY,GAEd,cAAe,CACb,KAAQ,SACR,UAAY,EACZ,QAAW,CACT,CACE,MAAS,IACT,MAAS,UAEX,CACE,MAAS,IACT,MAAS,YAIf,MAAS,CACP,KAAQ,WACR,UAAY,EACZ,QAAW,CACT,CACE,MAAS,kBACT,MAAS,cAEX,CACE,MAAS,kBACT,MAAS,gBAIf,OAAU,CACR,KAAQ,QACR,UAAY,EACZ,QAAW,CACT,CACE,MAAS,YACT,MAAS,aAEX,CACE,MAAS,gBACT,MAAS,mBAIf,KAAQ,CACN,KAAQ,YAMNC,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,iBAAmB,SAACC,GACd,EAAKC,MAAMC,iBACbC,aAAa,EAAKF,MAAMC,iBAG1B,IAAIE,EAAWJ,EAAEK,OAAOC,MAEpBJ,EAAkBK,YAAW,WAE/B,IAAIC,EACJ,IACEA,EAAOC,KAAKC,MAAMN,GAEpB,MAAOJ,GAEL,YADA,EAAKW,SAAS,CAAEC,aAAa,EAAOC,aAAc,gBAIpD,EAAKF,SAAS,CACZG,WAAYN,EACZK,aAAc,GACdD,aAAa,MAnCa,KAuC9B,EAAKD,SAAS,CACZT,gBAAiBA,KApCF,EA+CnBa,OAAS,SAACC,GACRC,QAAQC,IAAIF,IA9CZ,EAAKf,MAAQ,CACXC,gBAAiB,KACjBY,WAAYlB,EACZgB,aAAa,EACbC,aAAc,IANC,E,qDAwCVA,M,qCAIP,OAAO,8BAAUM,UAAU,SAASC,SAAUC,KAAKtB,iBAAkBuB,aAAcb,KAAKc,UAAU3B,EAAO,KAAM,O,iDAQ/G,IAAI4B,EAAc,gCAIlB,OAHKH,KAAKpB,MAAMW,cACdY,GAAe,qBAEVA,I,+BAIP,OACE,6BACE,wBAAIL,UAAU,SAAd,6BAGA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBAAgBE,KAAKpB,MAAMY,cAC1C,yBAAKM,UAAWE,KAAKI,4BAClBJ,KAAKK,mBAKd,yBAAKP,UAAU,QACb,yBAAKA,UAAU,iCACb,kBAAC,IAAD,CAAYvB,MAAOyB,KAAKpB,MAAMa,WAAYa,SAAUN,KAAKN,iB,GAjFrDa,aA0FlBC,IAASC,OAAO,kBAACjC,EAAD,MAASkC,SAASC,eAAe,W","file":"static/js/main.f24f4260.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport JsonToForm from 'json-reactform';\nimport './index.css'\n\nconst model = {\n  \"Plan Date\": {\n    \"type\": \"date\",\n    \"format\": \"dd MMMM yyyy\",\n    \"required\": true\n  },\n  \"Qty\": {\n    \"type\": \"number\",\n    \"required\": true\n  },\n  \"Item Number\": {\n    \"type\": \"select\",\n    \"required\": true,\n    \"options\": [ //use static json arry to get options\n      {\n        \"value\": \"1\",\n        \"label\": \"item 1\"\n      },\n      {\n        \"value\": \"2\",\n        \"label\": \"item 2\"\n      }\n    ],\n  },\n  \"Parts\": {\n    \"type\": \"checkbox\",\n    \"required\": true,\n    \"options\": [ //use static json arry to get options\n      {\n        \"value\": \"checkbox_item_1\",\n        \"label\": \"Checkbox 1\"\n      },\n      {\n        \"value\": \"checkbox_item_2\",\n        \"label\": \"Checkbox 2\"\n      }\n    ],\n  },\n  \"Status\": {\n    \"type\": \"radio\",\n    \"required\": true,\n    \"options\": [ //use static json arry to get options\n      {\n        \"value\": \"completed\",\n        \"label\": \"Completed\"\n      },\n      {\n        \"value\": \"not_completed\",\n        \"label\": \"Not Completed\"\n      }\n    ],\n  },\n  \"Save\": { // button submit\n    \"type\": \"submit\",\n  }\n}\n\nconst JSON_CHANGE_DEBOUNCE_TIME = 800\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      jsonChangeTimer: null,\n      jsonToForm: model,\n      isJsonValid: true,\n      errorMessage: ''\n    }\n  }\n\n  editorTextChange = (e) => {\n    if (this.state.jsonChangeTimer) {\n      clearTimeout(this.state.jsonChangeTimer)\n    }\n\n    let jsonText = e.target.value\n\n    let jsonChangeTimer = setTimeout(() => {\n      // let jsonText = e.target.value\n      let json\n      try {\n        json = JSON.parse(jsonText)\n      }\n      catch (e) {\n        this.setState({ isJsonValid: false, errorMessage: 'Parse error' })\n        return\n      }\n\n      this.setState({\n        jsonToForm: json,\n        errorMessage: '',\n        isJsonValid: true\n      })\n    }, JSON_CHANGE_DEBOUNCE_TIME);\n\n    this.setState({\n      jsonChangeTimer: jsonChangeTimer\n    })\n  }\n\n  setError(errorMessage) {\n  }\n\n  renderEditor() {\n    return <textarea className='editor' onChange={this.editorTextChange} defaultValue={JSON.stringify(model, null, 2)} />\n  }\n\n  submit = (params) => {\n    console.log(params);\n  }\n\n  getClassNamesForEditPane() {\n    let classString = 'paneContent editorPaneContent'\n    if (!this.state.isJsonValid) {\n      classString += ' errorPaneContent'\n    }\n    return classString\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className='title'>\n          json-reactform Playground\n      </h1>\n        <div className='content'>\n          <div className=\"pane\">\n            <div className='leftPane'>\n              <div className=\"friendlyEditor paneContent\"></div>\n              <div className=\"editorContainer\">\n                <div className='errorMessage'>{this.state.errorMessage}</div>\n                <div className={this.getClassNamesForEditPane()}>\n                  {this.renderEditor()}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"pane\">\n            <div className=\"paneContent resultPaneContent\">\n              <JsonToForm model={this.state.jsonToForm} onSubmit={this.submit} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}